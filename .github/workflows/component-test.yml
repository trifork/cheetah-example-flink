name: Component tests of all examples in Cheetah Platform Examples 
on:
  workflow_dispatch:
  
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]
    types:
      - labeled
      - opened
      - edited
      - ready_for_review
      - auto_merge_enabled
      - synchronize
      - reopened
      
  schedule:
  # * is a special character in YAML so you have to quote this string
  - cron: '30 0 * * *'

jobs:
  should-run: # seperate step to support ci/cd status checks
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.should-run.outputs.should-run }}

    steps:
      - name: E2E should run
        id: should-run
        uses: trifork/cheetah-infrastructure-utils-workflows/.github/actions/testing/e2e-should-run@main

  flink-state-component-test:
    name: "Flink States example component test"
    needs: should-run
    runs-on: ubuntu-latest
    if: ${{ needs.should-run.outputs.should-run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Flink States - Check if files has changed
        uses: tj-actions/changed-files@v40
        id: changed-files
        with: 
          files_yaml: |
            FlinkStates/**
            !FlinkStates/**.md
            !FlinkStates/**.gitignore

      - name: Build Flink States example image and run component test
        uses: ./.github/actions/component-test
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        with:
          context-path: ./FlinkStates/
          access-token: ${{ secrets.PACKAGE_PAT }}
          initial-kafka-topics: "MergeTwoStreamsInputTopicA MergeTwoStreamsInputTopicB"

  merge-two-streams-component-test:
    name: "Merge Two Streams example component test"
    needs: should-run
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Merge Two Streams example image and run component test
        uses: ./.github/actions/component-test
        with:
          context-path: ./MergeTwoStreams/
          access-token: ${{ secrets.PACKAGE_PAT }}
          initial-kafka-topics: "MergeTwoStreamsInputTopicA MergeTwoStreamsInputTopicB"

  multiple-sideoutput-component-test:
    name: "Multiple Side Output component test"
    needs: should-run
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Multiple Side Output example image and run component test
        uses: ./.github/actions/component-test
        with:
          context-path: ./MultipleSideOutput/
          access-token: ${{ secrets.PACKAGE_PAT }}
          initial-kafka-topics: "MultipleSideOutputExampleInputTopic"

  observability-component-test:
    name: "Observability component test"
    needs: should-run
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Observability example image and run component test
        uses: ./.github/actions/component-test
        with:
          context-path: ./Observability/
          access-token: ${{ secrets.PACKAGE_PAT }}
          initial-kafka-topics: "ObservabilityInputTopic"
  
  tumbling-window-component-test:
    name: "Tumbling Window component test"
    needs: should-run
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Tumbling Window example image and run component test
        uses: ./.github/actions/component-test
        with:
          context-path: ./TumblingWindow/
          access-token: ${{ secrets.PACKAGE_PAT }}
          initial-kafka-topics: "TumblingWindowInputTopic"

  external-lookup-component-test:
    name: "External Lookup component test"
    needs: should-run
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build External Lookup example image and run component test
        uses: ./.github/actions/component-test
        with:
          context-path: ./ExternalLookup/
          access-token: ${{ secrets.PACKAGE_PAT }}
          initial-kafka-topics: "ExternalLookupInputTopic"

