version: "3"
services:
  fepa-test:
    build:
      context: ComponentTest
      dockerfile: Dockerfile
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    environment:
      KAFKA__URL: kafka:19092
      KAFKA__OAUTH2__CLIENTID: default-access
      KAFKA__OAUTH2__CLIENTSECRET: default-access-secret
      KAFKA__OAUTH2__SCOPE: kafka
      KAFKA__OAUTH2__TOKENENDPOINT: http://keycloak:1852/realms/local-development/protocol/openid-connect/token
#    depends_on:
#      fepa-jobmanager:
#        condition: service_healthy

  fepa-jobmanager:
    image: ${DOCKER_REGISTRY-}fepa-job
    build:
      dockerfile: Dockerfile
      args:
        - MAVEN_ARGS=${EXTRA_MAVEN_ARGS-}
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    command: |
      standalone-job
      --job-classname fepa.job.fepaJob
      --kafka-bootstrap-servers kafka:19092
      --kafka-group-id fepa-group-id
      --input-kafka-topic fepaInputTopic
      --output-kafka-topic fepaOutputTopic
      --sql "INSERT INTO MultiSourceOutput SELECT fepaInputTopic.deviceId, fepaInputTopic.`timestamp`, fepaInputTopic.`value` FROM fepaInputTopic JOIN fepaOutputTopic ON fepaInputTopic.`timestamp` = fepaOutputTopic.`timestamp` WHERE fepaInputTopic.`timestamp` > 0"
      --source fepaInputTopic
      --source1 fepaOutputTopic
      --sink MultiSourceOutput
      --sourceSql "deviceId STRING, `timestamp` BIGINT, `value` FLOAT"
      --sourceSql1 "deviceId STRING, `timestamp` BIGINT, `value` FLOAT"
      --sinkSql "deviceId STRING, `timestamp` BIGINT, `value` FLOAT"
      --groupId Sql-group-id
      --clientId Sql-client-id
    ports:
      - "8098:8081"
    environment:
      SECURITY_PROTOCOL: SASL_PLAINTEXT
      TOKEN_URL: http://keycloak:1852/realms/local-development/protocol/openid-connect/token
      KAFKA_CLIENT_ID: default-access
      KAFKA_CLIENT_SECRET: default-access-secret
      KAFKA_SCOPE: kafka
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: fepa-jobmanager
        scheduler-mode: reactive
        rest.flamegraph.enabled: true
        state.backend: hashmap
        state.checkpoints.dir: file:///checkpoints/processing
        state.savepoints.dir: file:///checkpoints/processing
        execution.checkpointing.interval: 2 seconds
        execution.checkpointing.min-pause: 1 seconds
    volumes:
      - flink:/checkpoints
    healthcheck:
      test: curl localhost:8081/jobs | grep -q '"status":"RUNNING"' || exit -1
      interval: 1s
      timeout: 1s
      retries: 30
    depends_on:
      - fepa-taskmanager

  fepa-taskmanager:
    image: ${DOCKER_REGISTRY-}fepa-job
    build:
      dockerfile: Dockerfile
      args:
        - MAVEN_ARGS=${EXTRA_MAVEN_ARGS-}
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: fepa-jobmanager
        taskmanager.memory.process.size: 4gb
        taskmanager.numberOfTaskSlots: 2
    volumes:
      - flink:/checkpoints

networks:
  default:
    name: "cheetah-infrastructure"
    external: true

volumes:
  flink:

secrets:
  GITHUB_TOKEN:
    environment: GITHUB_TOKEN
  GITHUB_ACTOR:
    environment: GITHUB_ACTOR