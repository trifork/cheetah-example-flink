---
services:
  # Copied from JsonToAvro project
  # Start of JsonToAvro service
  jsontoavro-test:
    build:
      context: ../../JsonToAvro/ComponentTest
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    environment:
      KAFKA__URL: kafka:19092
      KAFKA__OAUTH2__CLIENTID: default-access
      KAFKA__OAUTH2__CLIENTSECRET: default-access-secret
      KAFKA__OAUTH2__SCOPE: kafka schema-registry
      KAFKA__OAUTH2__TOKENENDPOINT: http://keycloak:1852/realms/local-development/protocol/openid-connect/token
      KAFKA__SCHEMAREGISTRYURL: http://schema-registry:8080/apis/ccompat/v7
    depends_on:
      jsontoavro-jobmanager:
        condition: service_healthy

  jsontoavro-jobmanager:
    build:
      context: ../../JsonToAvro
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    command: |
      standalone-job

      --job-classname cheetah.example.job.JsonToAvroJob

      --kafka-bootstrap-servers kafka:19092
      --kafka-group-id jsonToAvro-group-id
      --sr-url http://schema-registry:8080/apis/ccompat/v7

      --input-kafka-topic jsonToAvroInputTopic
      --output-kafka-topic jsonToAvroOutputTopic
    environment:
      SECURITY_PROTOCOL: SASL_PLAINTEXT
      TOKEN_URL: http://keycloak:1852/realms/local-development/protocol/openid-connect/token
      KAFKA_CLIENT_ID: default-access
      KAFKA_CLIENT_SECRET: default-access-secret
      KAFKA_SCOPE: kafka
      SCHEMA_REGISTRY_CLIENT_ID: default-access
      SCHEMA_REGISTRY_CLIENT_SECRET: default-access-secret
      SCHEMA_REGISTRY_SCOPE: schema-registry
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jsontoavro-jobmanager
        scheduler-mode: reactive
        rest.flamegraph.enabled: true
        state.backend: rocksdb
        state.checkpoints.dir: file:///checkpoints/processing
        state.savepoints.dir: file:///checkpoints/processing
        execution.checkpointing.interval: 300 seconds
        execution.checkpointing.min-pause: 240 seconds
    depends_on:
      - jsontoavro-taskmanager
    volumes:
      - flink:/checkpoints
    healthcheck:
      test: curl localhost:8081/jobs | grep -q '"status":"RUNNING"' || exit -1
      interval: 1s
      timeout: 1s
      retries: 30

  jsontoavro-taskmanager:
    image: ${DOCKER_REGISTRY-}jsontoavro-job
    build:
      context: ../../JsonToAvro
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jsontoavro-jobmanager
        taskmanager.memory.process.size: 4gb
        taskmanager.numberOfTaskSlots: 2
    volumes:
      - flink:/checkpoints
  # End of JsonToAvro service

  # Copied from AvroToJson project
  # Start of AvroToJson service
  avrotojson-jobmanager:
    image: ${DOCKER_REGISTRY-}avrotojson-job
    build:
      context: ../../AvroToJson
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    command: |
      standalone-job

      --job-classname cheetah.example.job.AvroToJsonJob

      --kafka-bootstrap-servers kafka:19092
      --kafka-group-id AvroToJson-group-id
      --schema-registry-url http://schema-registry:8080/apis/ccompat/v7

      --input-kafka-topic jsonToAvroOutputTopic
      --output-kafka-topic AvroToJsonOutputTopic
    environment:
      SECURITY_PROTOCOL: SASL_PLAINTEXT
      TOKEN_URL: http://keycloak:1852/realms/local-development/protocol/openid-connect/token
      KAFKA_CLIENT_ID: default-access
      KAFKA_CLIENT_SECRET: default-access-secret
      KAFKA_SCOPE: kafka
      SCHEMA_REGISTRY_CLIENT_ID: default-access
      SCHEMA_REGISTRY_CLIENT_SECRET: default-access-secret
      SCHEMA_REGISTRY_SCOPE: schema-registry
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: avrotojson-jobmanager
        scheduler-mode: reactive
        rest.flamegraph.enabled: true
        state.backend: hashmap
        state.checkpoints.dir: file:///checkpoints/processing
        state.savepoints.dir: file:///checkpoints/processing
        execution.checkpointing.interval: 300 seconds
        execution.checkpointing.min-pause: 240 seconds
    volumes:
      - flink:/checkpoints
    healthcheck:
      test: curl localhost:8081/jobs | grep -q '"status":"RUNNING"' || exit -1
      interval: 1s
      timeout: 1s
      retries: 30
    depends_on:
      - avrotojson-taskmanager

  avrotojson-taskmanager:
    image: ${DOCKER_REGISTRY-}avrotojson-job
    build:
      context: ../../AvroToJson
      secrets:
        - GITHUB_TOKEN
        - GITHUB_ACTOR
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: avrotojson-jobmanager
        taskmanager.memory.process.size: 4gb
        taskmanager.numberOfTaskSlots: 2
    volumes:
      - flink:/checkpoints
# End of AvroToJson service

# Shared top level elements
volumes:
  flink:

secrets:
  GITHUB_TOKEN:
    environment: GITHUB_TOKEN
  GITHUB_ACTOR:
    environment: GITHUB_ACTOR

networks:
  default:
    name: "cheetah-infrastructure"
    external: true
