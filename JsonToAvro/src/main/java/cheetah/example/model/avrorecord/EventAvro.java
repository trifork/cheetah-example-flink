/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cheetah.example.model.avrorecord;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EventAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8499740819835857458L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventAvro\",\"namespace\":\"cheetah.example.model.avrorecord\",\"fields\":[{\"name\":\"readingTimestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"acousticNoise\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Unit\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Enhed_1\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Enhed_2\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"Enhed_3\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"infocodes\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"loggedVolume1\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"meterSerialNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hourCounter\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"volume1\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EventAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EventAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EventAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EventAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EventAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EventAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EventAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EventAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EventAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String readingTimestamp;
  private java.lang.String acousticNoise;
  private java.lang.String Unit;
  private java.lang.String Enhed_1;
  private java.lang.String Enhed_2;
  private java.lang.String Enhed_3;
  private java.lang.String infocodes;
  private java.lang.String loggedVolume1;
  private java.lang.String meterSerialNumber;
  private java.lang.String hourCounter;
  private java.lang.String volume1;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EventAvro() {}

  /**
   * All-args constructor.
   * @param readingTimestamp The new value for readingTimestamp
   * @param acousticNoise The new value for acousticNoise
   * @param Unit The new value for Unit
   * @param Enhed_1 The new value for Enhed_1
   * @param Enhed_2 The new value for Enhed_2
   * @param Enhed_3 The new value for Enhed_3
   * @param infocodes The new value for infocodes
   * @param loggedVolume1 The new value for loggedVolume1
   * @param meterSerialNumber The new value for meterSerialNumber
   * @param hourCounter The new value for hourCounter
   * @param volume1 The new value for volume1
   */
  public EventAvro(java.lang.String readingTimestamp, java.lang.String acousticNoise, java.lang.String Unit, java.lang.String Enhed_1, java.lang.String Enhed_2, java.lang.String Enhed_3, java.lang.String infocodes, java.lang.String loggedVolume1, java.lang.String meterSerialNumber, java.lang.String hourCounter, java.lang.String volume1) {
    this.readingTimestamp = readingTimestamp;
    this.acousticNoise = acousticNoise;
    this.Unit = Unit;
    this.Enhed_1 = Enhed_1;
    this.Enhed_2 = Enhed_2;
    this.Enhed_3 = Enhed_3;
    this.infocodes = infocodes;
    this.loggedVolume1 = loggedVolume1;
    this.meterSerialNumber = meterSerialNumber;
    this.hourCounter = hourCounter;
    this.volume1 = volume1;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return readingTimestamp;
    case 1: return acousticNoise;
    case 2: return Unit;
    case 3: return Enhed_1;
    case 4: return Enhed_2;
    case 5: return Enhed_3;
    case 6: return infocodes;
    case 7: return loggedVolume1;
    case 8: return meterSerialNumber;
    case 9: return hourCounter;
    case 10: return volume1;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: readingTimestamp = value$ != null ? value$.toString() : null; break;
    case 1: acousticNoise = value$ != null ? value$.toString() : null; break;
    case 2: Unit = value$ != null ? value$.toString() : null; break;
    case 3: Enhed_1 = value$ != null ? value$.toString() : null; break;
    case 4: Enhed_2 = value$ != null ? value$.toString() : null; break;
    case 5: Enhed_3 = value$ != null ? value$.toString() : null; break;
    case 6: infocodes = value$ != null ? value$.toString() : null; break;
    case 7: loggedVolume1 = value$ != null ? value$.toString() : null; break;
    case 8: meterSerialNumber = value$ != null ? value$.toString() : null; break;
    case 9: hourCounter = value$ != null ? value$.toString() : null; break;
    case 10: volume1 = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'readingTimestamp' field.
   * @return The value of the 'readingTimestamp' field.
   */
  public java.lang.String getReadingTimestamp() {
    return readingTimestamp;
  }


  /**
   * Sets the value of the 'readingTimestamp' field.
   * @param value the value to set.
   */
  public void setReadingTimestamp(java.lang.String value) {
    this.readingTimestamp = value;
  }

  /**
   * Gets the value of the 'acousticNoise' field.
   * @return The value of the 'acousticNoise' field.
   */
  public java.lang.String getAcousticNoise() {
    return acousticNoise;
  }


  /**
   * Sets the value of the 'acousticNoise' field.
   * @param value the value to set.
   */
  public void setAcousticNoise(java.lang.String value) {
    this.acousticNoise = value;
  }

  /**
   * Gets the value of the 'Unit' field.
   * @return The value of the 'Unit' field.
   */
  public java.lang.String getUnit() {
    return Unit;
  }


  /**
   * Sets the value of the 'Unit' field.
   * @param value the value to set.
   */
  public void setUnit(java.lang.String value) {
    this.Unit = value;
  }

  /**
   * Gets the value of the 'Enhed_1' field.
   * @return The value of the 'Enhed_1' field.
   */
  public java.lang.String getEnhed1() {
    return Enhed_1;
  }


  /**
   * Sets the value of the 'Enhed_1' field.
   * @param value the value to set.
   */
  public void setEnhed1(java.lang.String value) {
    this.Enhed_1 = value;
  }

  /**
   * Gets the value of the 'Enhed_2' field.
   * @return The value of the 'Enhed_2' field.
   */
  public java.lang.String getEnhed2() {
    return Enhed_2;
  }


  /**
   * Sets the value of the 'Enhed_2' field.
   * @param value the value to set.
   */
  public void setEnhed2(java.lang.String value) {
    this.Enhed_2 = value;
  }

  /**
   * Gets the value of the 'Enhed_3' field.
   * @return The value of the 'Enhed_3' field.
   */
  public java.lang.String getEnhed3() {
    return Enhed_3;
  }


  /**
   * Sets the value of the 'Enhed_3' field.
   * @param value the value to set.
   */
  public void setEnhed3(java.lang.String value) {
    this.Enhed_3 = value;
  }

  /**
   * Gets the value of the 'infocodes' field.
   * @return The value of the 'infocodes' field.
   */
  public java.lang.String getInfocodes() {
    return infocodes;
  }


  /**
   * Sets the value of the 'infocodes' field.
   * @param value the value to set.
   */
  public void setInfocodes(java.lang.String value) {
    this.infocodes = value;
  }

  /**
   * Gets the value of the 'loggedVolume1' field.
   * @return The value of the 'loggedVolume1' field.
   */
  public java.lang.String getLoggedVolume1() {
    return loggedVolume1;
  }


  /**
   * Sets the value of the 'loggedVolume1' field.
   * @param value the value to set.
   */
  public void setLoggedVolume1(java.lang.String value) {
    this.loggedVolume1 = value;
  }

  /**
   * Gets the value of the 'meterSerialNumber' field.
   * @return The value of the 'meterSerialNumber' field.
   */
  public java.lang.String getMeterSerialNumber() {
    return meterSerialNumber;
  }


  /**
   * Sets the value of the 'meterSerialNumber' field.
   * @param value the value to set.
   */
  public void setMeterSerialNumber(java.lang.String value) {
    this.meterSerialNumber = value;
  }

  /**
   * Gets the value of the 'hourCounter' field.
   * @return The value of the 'hourCounter' field.
   */
  public java.lang.String getHourCounter() {
    return hourCounter;
  }


  /**
   * Sets the value of the 'hourCounter' field.
   * @param value the value to set.
   */
  public void setHourCounter(java.lang.String value) {
    this.hourCounter = value;
  }

  /**
   * Gets the value of the 'volume1' field.
   * @return The value of the 'volume1' field.
   */
  public java.lang.String getVolume1() {
    return volume1;
  }


  /**
   * Sets the value of the 'volume1' field.
   * @param value the value to set.
   */
  public void setVolume1(java.lang.String value) {
    this.volume1 = value;
  }

  /**
   * Creates a new EventAvro RecordBuilder.
   * @return A new EventAvro RecordBuilder
   */
  public static cheetah.example.model.avrorecord.EventAvro.Builder newBuilder() {
    return new cheetah.example.model.avrorecord.EventAvro.Builder();
  }

  /**
   * Creates a new EventAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EventAvro RecordBuilder
   */
  public static cheetah.example.model.avrorecord.EventAvro.Builder newBuilder(cheetah.example.model.avrorecord.EventAvro.Builder other) {
    if (other == null) {
      return new cheetah.example.model.avrorecord.EventAvro.Builder();
    } else {
      return new cheetah.example.model.avrorecord.EventAvro.Builder(other);
    }
  }

  /**
   * Creates a new EventAvro RecordBuilder by copying an existing EventAvro instance.
   * @param other The existing instance to copy.
   * @return A new EventAvro RecordBuilder
   */
  public static cheetah.example.model.avrorecord.EventAvro.Builder newBuilder(cheetah.example.model.avrorecord.EventAvro other) {
    if (other == null) {
      return new cheetah.example.model.avrorecord.EventAvro.Builder();
    } else {
      return new cheetah.example.model.avrorecord.EventAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for EventAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventAvro>
    implements org.apache.avro.data.RecordBuilder<EventAvro> {

    private java.lang.String readingTimestamp;
    private java.lang.String acousticNoise;
    private java.lang.String Unit;
    private java.lang.String Enhed_1;
    private java.lang.String Enhed_2;
    private java.lang.String Enhed_3;
    private java.lang.String infocodes;
    private java.lang.String loggedVolume1;
    private java.lang.String meterSerialNumber;
    private java.lang.String hourCounter;
    private java.lang.String volume1;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(cheetah.example.model.avrorecord.EventAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.readingTimestamp)) {
        this.readingTimestamp = data().deepCopy(fields()[0].schema(), other.readingTimestamp);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.acousticNoise)) {
        this.acousticNoise = data().deepCopy(fields()[1].schema(), other.acousticNoise);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.Unit)) {
        this.Unit = data().deepCopy(fields()[2].schema(), other.Unit);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.Enhed_1)) {
        this.Enhed_1 = data().deepCopy(fields()[3].schema(), other.Enhed_1);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.Enhed_2)) {
        this.Enhed_2 = data().deepCopy(fields()[4].schema(), other.Enhed_2);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.Enhed_3)) {
        this.Enhed_3 = data().deepCopy(fields()[5].schema(), other.Enhed_3);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.infocodes)) {
        this.infocodes = data().deepCopy(fields()[6].schema(), other.infocodes);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.loggedVolume1)) {
        this.loggedVolume1 = data().deepCopy(fields()[7].schema(), other.loggedVolume1);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.meterSerialNumber)) {
        this.meterSerialNumber = data().deepCopy(fields()[8].schema(), other.meterSerialNumber);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.hourCounter)) {
        this.hourCounter = data().deepCopy(fields()[9].schema(), other.hourCounter);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.volume1)) {
        this.volume1 = data().deepCopy(fields()[10].schema(), other.volume1);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing EventAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(cheetah.example.model.avrorecord.EventAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.readingTimestamp)) {
        this.readingTimestamp = data().deepCopy(fields()[0].schema(), other.readingTimestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.acousticNoise)) {
        this.acousticNoise = data().deepCopy(fields()[1].schema(), other.acousticNoise);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Unit)) {
        this.Unit = data().deepCopy(fields()[2].schema(), other.Unit);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Enhed_1)) {
        this.Enhed_1 = data().deepCopy(fields()[3].schema(), other.Enhed_1);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Enhed_2)) {
        this.Enhed_2 = data().deepCopy(fields()[4].schema(), other.Enhed_2);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Enhed_3)) {
        this.Enhed_3 = data().deepCopy(fields()[5].schema(), other.Enhed_3);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.infocodes)) {
        this.infocodes = data().deepCopy(fields()[6].schema(), other.infocodes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.loggedVolume1)) {
        this.loggedVolume1 = data().deepCopy(fields()[7].schema(), other.loggedVolume1);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.meterSerialNumber)) {
        this.meterSerialNumber = data().deepCopy(fields()[8].schema(), other.meterSerialNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.hourCounter)) {
        this.hourCounter = data().deepCopy(fields()[9].schema(), other.hourCounter);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.volume1)) {
        this.volume1 = data().deepCopy(fields()[10].schema(), other.volume1);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'readingTimestamp' field.
      * @return The value.
      */
    public java.lang.String getReadingTimestamp() {
      return readingTimestamp;
    }


    /**
      * Sets the value of the 'readingTimestamp' field.
      * @param value The value of 'readingTimestamp'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setReadingTimestamp(java.lang.String value) {
      validate(fields()[0], value);
      this.readingTimestamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'readingTimestamp' field has been set.
      * @return True if the 'readingTimestamp' field has been set, false otherwise.
      */
    public boolean hasReadingTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'readingTimestamp' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearReadingTimestamp() {
      readingTimestamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'acousticNoise' field.
      * @return The value.
      */
    public java.lang.String getAcousticNoise() {
      return acousticNoise;
    }


    /**
      * Sets the value of the 'acousticNoise' field.
      * @param value The value of 'acousticNoise'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setAcousticNoise(java.lang.String value) {
      validate(fields()[1], value);
      this.acousticNoise = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'acousticNoise' field has been set.
      * @return True if the 'acousticNoise' field has been set, false otherwise.
      */
    public boolean hasAcousticNoise() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'acousticNoise' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearAcousticNoise() {
      acousticNoise = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Unit' field.
      * @return The value.
      */
    public java.lang.String getUnit() {
      return Unit;
    }


    /**
      * Sets the value of the 'Unit' field.
      * @param value The value of 'Unit'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setUnit(java.lang.String value) {
      validate(fields()[2], value);
      this.Unit = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Unit' field has been set.
      * @return True if the 'Unit' field has been set, false otherwise.
      */
    public boolean hasUnit() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Unit' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearUnit() {
      Unit = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Enhed_1' field.
      * @return The value.
      */
    public java.lang.String getEnhed1() {
      return Enhed_1;
    }


    /**
      * Sets the value of the 'Enhed_1' field.
      * @param value The value of 'Enhed_1'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setEnhed1(java.lang.String value) {
      validate(fields()[3], value);
      this.Enhed_1 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Enhed_1' field has been set.
      * @return True if the 'Enhed_1' field has been set, false otherwise.
      */
    public boolean hasEnhed1() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Enhed_1' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearEnhed1() {
      Enhed_1 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Enhed_2' field.
      * @return The value.
      */
    public java.lang.String getEnhed2() {
      return Enhed_2;
    }


    /**
      * Sets the value of the 'Enhed_2' field.
      * @param value The value of 'Enhed_2'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setEnhed2(java.lang.String value) {
      validate(fields()[4], value);
      this.Enhed_2 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Enhed_2' field has been set.
      * @return True if the 'Enhed_2' field has been set, false otherwise.
      */
    public boolean hasEnhed2() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Enhed_2' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearEnhed2() {
      Enhed_2 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'Enhed_3' field.
      * @return The value.
      */
    public java.lang.String getEnhed3() {
      return Enhed_3;
    }


    /**
      * Sets the value of the 'Enhed_3' field.
      * @param value The value of 'Enhed_3'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setEnhed3(java.lang.String value) {
      validate(fields()[5], value);
      this.Enhed_3 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'Enhed_3' field has been set.
      * @return True if the 'Enhed_3' field has been set, false otherwise.
      */
    public boolean hasEnhed3() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'Enhed_3' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearEnhed3() {
      Enhed_3 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'infocodes' field.
      * @return The value.
      */
    public java.lang.String getInfocodes() {
      return infocodes;
    }


    /**
      * Sets the value of the 'infocodes' field.
      * @param value The value of 'infocodes'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setInfocodes(java.lang.String value) {
      validate(fields()[6], value);
      this.infocodes = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'infocodes' field has been set.
      * @return True if the 'infocodes' field has been set, false otherwise.
      */
    public boolean hasInfocodes() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'infocodes' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearInfocodes() {
      infocodes = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'loggedVolume1' field.
      * @return The value.
      */
    public java.lang.String getLoggedVolume1() {
      return loggedVolume1;
    }


    /**
      * Sets the value of the 'loggedVolume1' field.
      * @param value The value of 'loggedVolume1'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setLoggedVolume1(java.lang.String value) {
      validate(fields()[7], value);
      this.loggedVolume1 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'loggedVolume1' field has been set.
      * @return True if the 'loggedVolume1' field has been set, false otherwise.
      */
    public boolean hasLoggedVolume1() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'loggedVolume1' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearLoggedVolume1() {
      loggedVolume1 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'meterSerialNumber' field.
      * @return The value.
      */
    public java.lang.String getMeterSerialNumber() {
      return meterSerialNumber;
    }


    /**
      * Sets the value of the 'meterSerialNumber' field.
      * @param value The value of 'meterSerialNumber'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setMeterSerialNumber(java.lang.String value) {
      validate(fields()[8], value);
      this.meterSerialNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'meterSerialNumber' field has been set.
      * @return True if the 'meterSerialNumber' field has been set, false otherwise.
      */
    public boolean hasMeterSerialNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'meterSerialNumber' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearMeterSerialNumber() {
      meterSerialNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'hourCounter' field.
      * @return The value.
      */
    public java.lang.String getHourCounter() {
      return hourCounter;
    }


    /**
      * Sets the value of the 'hourCounter' field.
      * @param value The value of 'hourCounter'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setHourCounter(java.lang.String value) {
      validate(fields()[9], value);
      this.hourCounter = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'hourCounter' field has been set.
      * @return True if the 'hourCounter' field has been set, false otherwise.
      */
    public boolean hasHourCounter() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'hourCounter' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearHourCounter() {
      hourCounter = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'volume1' field.
      * @return The value.
      */
    public java.lang.String getVolume1() {
      return volume1;
    }


    /**
      * Sets the value of the 'volume1' field.
      * @param value The value of 'volume1'.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder setVolume1(java.lang.String value) {
      validate(fields()[10], value);
      this.volume1 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'volume1' field has been set.
      * @return True if the 'volume1' field has been set, false otherwise.
      */
    public boolean hasVolume1() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'volume1' field.
      * @return This builder.
      */
    public cheetah.example.model.avrorecord.EventAvro.Builder clearVolume1() {
      volume1 = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EventAvro build() {
      try {
        EventAvro record = new EventAvro();
        record.readingTimestamp = fieldSetFlags()[0] ? this.readingTimestamp : (java.lang.String) defaultValue(fields()[0]);
        record.acousticNoise = fieldSetFlags()[1] ? this.acousticNoise : (java.lang.String) defaultValue(fields()[1]);
        record.Unit = fieldSetFlags()[2] ? this.Unit : (java.lang.String) defaultValue(fields()[2]);
        record.Enhed_1 = fieldSetFlags()[3] ? this.Enhed_1 : (java.lang.String) defaultValue(fields()[3]);
        record.Enhed_2 = fieldSetFlags()[4] ? this.Enhed_2 : (java.lang.String) defaultValue(fields()[4]);
        record.Enhed_3 = fieldSetFlags()[5] ? this.Enhed_3 : (java.lang.String) defaultValue(fields()[5]);
        record.infocodes = fieldSetFlags()[6] ? this.infocodes : (java.lang.String) defaultValue(fields()[6]);
        record.loggedVolume1 = fieldSetFlags()[7] ? this.loggedVolume1 : (java.lang.String) defaultValue(fields()[7]);
        record.meterSerialNumber = fieldSetFlags()[8] ? this.meterSerialNumber : (java.lang.String) defaultValue(fields()[8]);
        record.hourCounter = fieldSetFlags()[9] ? this.hourCounter : (java.lang.String) defaultValue(fields()[9]);
        record.volume1 = fieldSetFlags()[10] ? this.volume1 : (java.lang.String) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EventAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<EventAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EventAvro>
    READER$ = (org.apache.avro.io.DatumReader<EventAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.readingTimestamp);

    out.writeString(this.acousticNoise);

    out.writeString(this.Unit);

    out.writeString(this.Enhed_1);

    out.writeString(this.Enhed_2);

    out.writeString(this.Enhed_3);

    out.writeString(this.infocodes);

    out.writeString(this.loggedVolume1);

    out.writeString(this.meterSerialNumber);

    out.writeString(this.hourCounter);

    out.writeString(this.volume1);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.readingTimestamp = in.readString();

      this.acousticNoise = in.readString();

      this.Unit = in.readString();

      this.Enhed_1 = in.readString();

      this.Enhed_2 = in.readString();

      this.Enhed_3 = in.readString();

      this.infocodes = in.readString();

      this.loggedVolume1 = in.readString();

      this.meterSerialNumber = in.readString();

      this.hourCounter = in.readString();

      this.volume1 = in.readString();

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.readingTimestamp = in.readString();
          break;

        case 1:
          this.acousticNoise = in.readString();
          break;

        case 2:
          this.Unit = in.readString();
          break;

        case 3:
          this.Enhed_1 = in.readString();
          break;

        case 4:
          this.Enhed_2 = in.readString();
          break;

        case 5:
          this.Enhed_3 = in.readString();
          break;

        case 6:
          this.infocodes = in.readString();
          break;

        case 7:
          this.loggedVolume1 = in.readString();
          break;

        case 8:
          this.meterSerialNumber = in.readString();
          break;

        case 9:
          this.hourCounter = in.readString();
          break;

        case 10:
          this.volume1 = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










